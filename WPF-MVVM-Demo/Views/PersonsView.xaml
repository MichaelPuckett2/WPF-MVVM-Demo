<UserControl x:Class="WPF_MVVM_Demo.Views.PersonsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:WPF_MVVM_Demo.ViewModels"
             xmlns:local="clr-namespace:WPF_MVVM_Demo.Views"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">

    <UserControl.Resources>
        <!--This is a resource and can be referenced in your code.  We are making a Converter resource in this case.-->
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>

    <UserControl.DataContext>
        <viewModels:PersonsViewModel />
    </UserControl.DataContext>

    <Grid>
        <!--ItemsSource takes an enumeration of items.  It looks up the tree to find the first assigned DataContext, which in our case, is PersonsViewModel in this UserControl-->
        <ItemsControl ItemsSource="{Binding Persons}">

            <!--ItemTemplate takes a DataTemplate and is used to dictate how the view will display each item in the ItemsSource.
            The DataTemplate can be and is usually stored in a ResourceDictionary and not here in the view, but that depends on the need and reuse-->
            <ItemsControl.ItemTemplate>
                <DataTemplate>

                    <Border BorderBrush="Black"
                            BorderThickness="0.5"
                            CornerRadius="5"
                            Margin="8">
                        <Grid Margin="8">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <TextBlock Text="First Name" />
                            <TextBox Text="{Binding FirstName}"
                                     Grid.Row="1" />

                            <TextBlock Text="Last Name"
                                       Grid.Row="2" />
                            <TextBox Text="{Binding LastName}"
                                     Grid.Row="3" />

                            <TextBlock Text="Age"
                                       Grid.Row="4" />
                            <TextBox Text="{Binding Age}"
                                     Grid.Row="5" />

                        </Grid>
                    </Border>

                </DataTemplate>
            </ItemsControl.ItemTemplate>

        </ItemsControl>

        <!--Items are shown with bottom last one on top. Unless you override the ZOrder the grid below will overload the items above.
        This is because we have two items in the same Grid and they consume the same rows (in this case there are no rows)-->
        <Grid Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Rectangle Fill="Gray" />
            <TextBlock Text="Loading..."
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center" 
                       FontSize="40"
                       FontWeight="Bold"/>
        </Grid>

    </Grid>
</UserControl>
